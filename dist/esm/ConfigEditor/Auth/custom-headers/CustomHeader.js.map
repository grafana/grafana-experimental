{"version":3,"file":"CustomHeader.js","sources":["../../../../../src/ConfigEditor/Auth/custom-headers/CustomHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { css, cx } from '@emotion/css';\nimport { InlineFieldRow, InlineField, Input, IconButton, useTheme2 } from '@grafana/ui';\nimport { SecretInput } from '../common';\nimport type { LocalHeader } from '../types';\nimport { useCommonStyles } from '../styles';\n\nexport type Props = {\n  header: LocalHeader;\n  onChange: (header: LocalHeader) => void;\n  onBlur: () => void;\n  onDelete: () => void;\n  readOnly: boolean;\n};\n\nexport const CustomHeader: React.FC<Props> = ({ header, onChange, onBlur, onDelete, readOnly }) => {\n  const { spacing } = useTheme2();\n  const commonStyles = useCommonStyles();\n  const styles = {\n    container: css({\n      alignItems: 'center',\n    }),\n    input: css({\n      minWidth: '100%',\n    }),\n    headerNameField: css({\n      width: '40%',\n      marginRight: 0,\n      paddingRight: spacing(1),\n    }),\n    headerValueField: css({\n      width: '45%',\n      marginRight: 0,\n    }),\n    removeHeaderBtn: css({\n      margin: `0 0 3px 10px`,\n    }),\n  };\n\n  return (\n    <>\n      <InlineFieldRow className={styles.container}>\n        <InlineField\n          label=\"Header\"\n          labelWidth={9}\n          grow\n          className={styles.headerNameField}\n          htmlFor={`custom-header-${header.id}-name-input`}\n          disabled={readOnly}\n        >\n          <Input\n            id={`custom-header-${header.id}-name-input`}\n            placeholder=\"X-Custom-Header\"\n            value={header.name}\n            width={12}\n            onChange={(e) => onChange({ ...header, name: e.currentTarget.value })}\n            onBlur={onBlur}\n            className={styles.input}\n          />\n        </InlineField>\n        <InlineField\n          label=\"Value\"\n          labelWidth={9}\n          grow\n          className={cx(commonStyles.inlineFieldWithSecret, styles.headerValueField)}\n          htmlFor={`custom-header-${header.id}-value-input`}\n          disabled={readOnly}\n        >\n          <SecretInput\n            id={`custom-header-${header.id}-value-input`}\n            isConfigured={header.configured}\n            placeholder=\"Header value\"\n            value={header.value}\n            width={12}\n            onChange={(e) => onChange({ ...header, value: e.currentTarget.value })}\n            onReset={readOnly ? () => {} : () => onChange({ ...header, configured: false, value: '' })}\n            onBlur={onBlur}\n            className={styles.input}\n          />\n        </InlineField>\n        <IconButton\n          name=\"trash-alt\"\n          tooltip=\"Remove header\"\n          tooltipPlacement=\"top\"\n          className={styles.removeHeaderBtn}\n          onClick={onDelete}\n          type=\"button\"\n          disabled={readOnly}\n        />\n      </InlineFieldRow>\n    </>\n  );\n};\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAea,MAAA,YAAA,GAAgC,CAAC,EAAE,MAAA,EAAQ,UAAU,MAAQ,EAAA,QAAA,EAAU,UAAe,KAAA;AACjG,EAAM,MAAA,EAAE,OAAQ,EAAA,GAAI,SAAU,EAAA,CAAA;AAC9B,EAAA,MAAM,eAAe,eAAgB,EAAA,CAAA;AACrC,EAAA,MAAM,MAAS,GAAA;AAAA,IACb,WAAW,GAAI,CAAA;AAAA,MACb,UAAY,EAAA,QAAA;AAAA,KACb,CAAA;AAAA,IACD,OAAO,GAAI,CAAA;AAAA,MACT,QAAU,EAAA,MAAA;AAAA,KACX,CAAA;AAAA,IACD,iBAAiB,GAAI,CAAA;AAAA,MACnB,KAAO,EAAA,KAAA;AAAA,MACP,WAAa,EAAA,CAAA;AAAA,MACb,YAAA,EAAc,QAAQ,CAAC,CAAA;AAAA,KACxB,CAAA;AAAA,IACD,kBAAkB,GAAI,CAAA;AAAA,MACpB,KAAO,EAAA,KAAA;AAAA,MACP,WAAa,EAAA,CAAA;AAAA,KACd,CAAA;AAAA,IACD,iBAAiB,GAAI,CAAA;AAAA,MACnB,MAAQ,EAAA,CAAA,YAAA,CAAA;AAAA,KACT,CAAA;AAAA,GACH,CAAA;AAEA,EAAA,uBAEIA,cAAA,CAAA,aAAA,CAAAA,cAAA,CAAA,QAAA,EAAA,IAAA,kBAAAA,cAAA,CAAA,aAAA,CAAC,cAAe,EAAA,EAAA,SAAA,EAAW,OAAO,SAChC,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,KAAM,EAAA,QAAA;AAAA,MACN,UAAY,EAAA,CAAA;AAAA,MACZ,IAAI,EAAA,IAAA;AAAA,MACJ,WAAW,MAAO,CAAA,eAAA;AAAA,MAClB,OAAA,EAAS,iBAAiB,MAAO,CAAA,EAAA,CAAA,WAAA,CAAA;AAAA,MACjC,QAAU,EAAA,QAAA;AAAA,KAAA;AAAA,oBAEVA,cAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,EAAA,EAAI,iBAAiB,MAAO,CAAA,EAAA,CAAA,WAAA,CAAA;AAAA,QAC5B,WAAY,EAAA,iBAAA;AAAA,QACZ,OAAO,MAAO,CAAA,IAAA;AAAA,QACd,KAAO,EAAA,EAAA;AAAA,QACP,QAAA,EAAU,CAAC,CAAA,KAAM,QAAS,CAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EAAK,MAAL,CAAA,EAAA,EAAa,IAAM,EAAA,CAAA,CAAE,aAAc,CAAA,KAAA,EAAO,CAAA,CAAA;AAAA,QACpE,MAAA;AAAA,QACA,WAAW,MAAO,CAAA,KAAA;AAAA,OAAA;AAAA,KACpB;AAAA,GAEF,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,KAAM,EAAA,OAAA;AAAA,MACN,UAAY,EAAA,CAAA;AAAA,MACZ,IAAI,EAAA,IAAA;AAAA,MACJ,SAAW,EAAA,EAAA,CAAG,YAAa,CAAA,qBAAA,EAAuB,OAAO,gBAAgB,CAAA;AAAA,MACzE,OAAA,EAAS,iBAAiB,MAAO,CAAA,EAAA,CAAA,YAAA,CAAA;AAAA,MACjC,QAAU,EAAA,QAAA;AAAA,KAAA;AAAA,oBAEVA,cAAA,CAAA,aAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,EAAA,EAAI,iBAAiB,MAAO,CAAA,EAAA,CAAA,YAAA,CAAA;AAAA,QAC5B,cAAc,MAAO,CAAA,UAAA;AAAA,QACrB,WAAY,EAAA,cAAA;AAAA,QACZ,OAAO,MAAO,CAAA,KAAA;AAAA,QACd,KAAO,EAAA,EAAA;AAAA,QACP,QAAA,EAAU,CAAC,CAAA,KAAM,QAAS,CAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EAAK,MAAL,CAAA,EAAA,EAAa,KAAO,EAAA,CAAA,CAAE,aAAc,CAAA,KAAA,EAAO,CAAA,CAAA;AAAA,QACrE,OAAA,EAAS,WAAW,MAAM;AAAA,SAAC,GAAI,MAAM,QAAA,CAAS,aAAK,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,CAAA,EAAL,EAAa,UAAY,EAAA,KAAA,EAAO,KAAO,EAAA,EAAA,EAAI,CAAA,CAAA;AAAA,QACzF,MAAA;AAAA,QACA,WAAW,MAAO,CAAA,KAAA;AAAA,OAAA;AAAA,KACpB;AAAA,GAEF,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,UAAA;AAAA,IAAA;AAAA,MACC,IAAK,EAAA,WAAA;AAAA,MACL,OAAQ,EAAA,eAAA;AAAA,MACR,gBAAiB,EAAA,KAAA;AAAA,MACjB,WAAW,MAAO,CAAA,eAAA;AAAA,MAClB,OAAS,EAAA,QAAA;AAAA,MACT,IAAK,EAAA,QAAA;AAAA,MACL,QAAU,EAAA,QAAA;AAAA,KAAA;AAAA,GAEd,CACF,CAAA,CAAA;AAEJ;;;;"}