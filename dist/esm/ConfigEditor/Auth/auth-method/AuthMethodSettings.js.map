{"version":3,"file":"AuthMethodSettings.js","sources":["../../../../../src/ConfigEditor/Auth/auth-method/AuthMethodSettings.tsx"],"sourcesContent":["import React, { ReactElement, useMemo, useState } from 'react';\nimport { css } from '@emotion/css';\nimport { useTheme2, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\nimport { BasicAuth, Props as BasicAuthProps } from './BasicAuth';\nimport { ConfigSubSection } from '../../ConfigSection';\nimport { AuthMethod, CustomMethod, CustomMethodId , DefaultAuthMethod } from '../types';\n\nconst defaultOptions: Record<AuthMethod, SelectableValue<AuthMethod>> = {\n  [AuthMethod.BasicAuth]: {\n    label: 'Basic authentication',\n    value: AuthMethod.BasicAuth,\n    description: 'Authenticate with your data source username and password',\n  },\n  [AuthMethod.CrossSiteCredentials]: {\n    label: 'Enable cross-site access control requests',\n    value: AuthMethod.CrossSiteCredentials,\n    description:\n      'Allow cross-site Access-Control requests with your existing credentials and cookies. This enables the server to authenticate the user and perform authorized requests on their behalf on other domains.',\n  },\n  [AuthMethod.OAuthForward]: {\n    label: 'Forward OAuth Identity',\n    value: AuthMethod.OAuthForward,\n    description:\n      'Forward the OAuth access token (and if available: the OIDC ID token) of the user querying to the data source',\n  },\n  [AuthMethod.NoAuth]: {\n    label: 'No Authentication',\n    value: AuthMethod.NoAuth,\n    description: 'Data source is available without authentication',\n  },\n};\n\nexport type Props = {\n  selectedMethod: AuthMethod | CustomMethodId;\n  mostCommonMethod?: AuthMethod | CustomMethodId;\n  visibleMethods?: Array<AuthMethod | CustomMethodId>;\n  extendedDefaultOptions?: Partial<Record<AuthMethod, DefaultAuthMethod>>;\n  customMethods?: CustomMethod[];\n  onAuthMethodSelect: (authType: AuthMethod | CustomMethodId) => void;\n  basicAuth?: Omit<BasicAuthProps, 'readOnly'>;\n  readOnly: boolean;\n};\n\nexport const AuthMethodSettings: React.FC<Props> = ({\n  selectedMethod,\n  mostCommonMethod,\n  visibleMethods: visibleMethodsFromProps,\n  extendedDefaultOptions,\n  customMethods,\n  onAuthMethodSelect,\n  basicAuth,\n  readOnly,\n}) => {\n  const [authMethodChanged, setAuthMethodChanged] = useState(false);\n  const { colors, spacing } = useTheme2();\n  const visibleMethods: Array<AuthMethod | CustomMethodId> = useMemo(\n    () =>\n      visibleMethodsFromProps ?? [\n        AuthMethod.BasicAuth,\n        AuthMethod.OAuthForward,\n        AuthMethod.NoAuth,\n        ...(customMethods?.map((m) => m.id) ?? []),\n      ],\n    [customMethods, visibleMethodsFromProps]\n  );\n  const hasSelect = visibleMethods.length > 1;\n\n  const preparedOptions = useMemo(() => {\n    const customOptions =\n      customMethods?.reduce<Record<CustomMethodId, SelectableValue<CustomMethodId>>>((acc, method) => {\n        acc[method.id] = {\n          label: method.label,\n          value: method.id,\n          description: method.description,\n        };\n        return acc;\n      }, {}) ?? {};\n\n    const preparedDefaultOptions = {} as Record<AuthMethod, SelectableValue<AuthMethod>>;\n    let k: keyof typeof AuthMethod;\n    for (k in defaultOptions) {\n      if (extendedDefaultOptions && extendedDefaultOptions[k]) {\n        preparedDefaultOptions[k] = {\n          ...defaultOptions[k],\n          ...extendedDefaultOptions[k],\n        }\n      } else {\n        preparedDefaultOptions[k] = defaultOptions[k];\n      }\n    }\n\n    const allOptions: Record<AuthMethod | CustomMethodId, SelectableValue<AuthMethod | CustomMethodId>> = {\n      ...customOptions,\n      ...preparedDefaultOptions,\n    };\n\n    return visibleMethods\n      .filter((method) => Boolean(allOptions[method]))\n      .map((method) => {\n        const option = allOptions[method];\n        if (method === mostCommonMethod && hasSelect) {\n          return {\n            ...option,\n            label: `${option.label} (most common)`,\n          };\n        }\n        return option;\n      });\n  }, [visibleMethods, customMethods, extendedDefaultOptions, mostCommonMethod, hasSelect]);\n\n  let selected = selectedMethod;\n  if (!hasSelect) {\n    selected = visibleMethods[0];\n  } else if (selectedMethod === AuthMethod.NoAuth && mostCommonMethod && !authMethodChanged) {\n    selected = mostCommonMethod;\n  }\n\n  let AuthFieldsComponent: ReactElement | null = null;\n  if (selected === AuthMethod.BasicAuth && basicAuth) {\n    AuthFieldsComponent = <BasicAuth {...basicAuth} readOnly={readOnly} />;\n  } else if (selected.startsWith('custom-')) {\n    AuthFieldsComponent = customMethods?.find((m) => m.id === selected)?.component ?? null;\n  }\n\n  const title = hasSelect ? 'Authentication methods' : preparedOptions[0].label ?? '';\n\n  const description = hasSelect\n    ? 'Choose an authentication method to access the data source'\n    : preparedOptions[0].description ?? '';\n\n  const styles = {\n    authMethods: css({\n      marginTop: spacing(2.5),\n      ...(hasSelect && {\n        padding: spacing(2),\n        border: `1px solid ${colors.border.weak}`,\n      }),\n    }),\n    selectedMethodFields: css({\n      marginTop: spacing(1.5),\n    }),\n  };\n\n  return (\n    <ConfigSubSection title={title} description={description}>\n      <div className={styles.authMethods}>\n        {hasSelect && (\n          <Select\n            options={preparedOptions}\n            value={selected}\n            onChange={(option) => {\n              setAuthMethodChanged(true);\n              onAuthMethodSelect(option.value!);\n            }}\n            disabled={readOnly}\n          />\n        )}\n        {AuthFieldsComponent && <div className={styles.selectedMethodFields}>{AuthFieldsComponent}</div>}\n      </div>\n    </ConfigSubSection>\n  );\n};\n"],"names":["_a","React"],"mappings":"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"}