{"version":3,"file":"BasicAuth.js","sources":["../../../../../src/ConfigEditor/Auth/auth-method/BasicAuth.tsx"],"sourcesContent":["import React from 'react';\nimport { cx, css } from '@emotion/css';\nimport { InlineField, Input, PopoverContent } from '@grafana/ui';\nimport { SecretInput } from '../common';\nimport { useCommonStyles } from '../styles';\n\nexport type Props = {\n  user?: string;\n  passwordConfigured: boolean;\n  userTooltip?: PopoverContent;\n  passwordTooltip?: PopoverContent;\n  onUserChange: (user: string) => void;\n  onPasswordChange: (password: string) => void;\n  onPasswordReset: () => void;\n  readOnly: boolean;\n};\n\nexport const BasicAuth: React.FC<Props> = ({\n  user,\n  passwordConfigured,\n  userTooltip = 'The username of the data source account',\n  passwordTooltip = 'The password of the data source account',\n  onUserChange,\n  onPasswordChange,\n  onPasswordReset,\n  readOnly,\n}) => {\n  const commonStyles = useCommonStyles();\n  const styles = {\n    lastInlineField: css({\n      marginBottom: 0,\n    }),\n  };\n  return (\n    <>\n      <InlineField\n        className={commonStyles.inlineFieldNoMarginRight}\n        label=\"User\"\n        labelWidth={24}\n        tooltip={userTooltip}\n        required\n        htmlFor=\"basic-auth-user-input\"\n        interactive\n        grow\n        disabled={readOnly}\n      >\n        <Input\n          id=\"basic-auth-user-input\"\n          placeholder=\"User\"\n          value={user}\n          onChange={(e) => onUserChange(e.currentTarget.value)}\n          required\n        />\n      </InlineField>\n      <InlineField\n        className={cx(\n          commonStyles.inlineFieldNoMarginRight,\n          commonStyles.inlineFieldWithSecret,\n          styles.lastInlineField\n        )}\n        label=\"Password\"\n        labelWidth={24}\n        tooltip={passwordTooltip}\n        required\n        htmlFor=\"basic-auth-password-input\"\n        interactive\n        grow\n        disabled={readOnly}\n      >\n        <SecretInput\n          id=\"basic-auth-password-input\"\n          isConfigured={passwordConfigured}\n          onReset={readOnly ? () => {} : onPasswordReset}\n          placeholder=\"Password\"\n          onChange={(e) => onPasswordChange(e.currentTarget.value)}\n          required\n        />\n      </InlineField>\n    </>\n  );\n};\n"],"names":["React"],"mappings":";;;;;;AAiBO,MAAM,YAA6B,CAAC;AAAA,EACzC,IAAA;AAAA,EACA,kBAAA;AAAA,EACA,WAAc,GAAA,yCAAA;AAAA,EACd,eAAkB,GAAA,yCAAA;AAAA,EAClB,YAAA;AAAA,EACA,gBAAA;AAAA,EACA,eAAA;AAAA,EACA,QAAA;AACF,CAAM,KAAA;AACJ,EAAA,MAAM,eAAe,eAAgB,EAAA,CAAA;AACrC,EAAA,MAAM,MAAS,GAAA;AAAA,IACb,iBAAiB,GAAI,CAAA;AAAA,MACnB,YAAc,EAAA,CAAA;AAAA,KACf,CAAA;AAAA,GACH,CAAA;AACA,EAAA,uBAEIA,cAAA,CAAA,aAAA,CAAAA,cAAA,CAAA,QAAA,EAAA,IAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,WAAW,YAAa,CAAA,wBAAA;AAAA,MACxB,KAAM,EAAA,MAAA;AAAA,MACN,UAAY,EAAA,EAAA;AAAA,MACZ,OAAS,EAAA,WAAA;AAAA,MACT,QAAQ,EAAA,IAAA;AAAA,MACR,OAAQ,EAAA,uBAAA;AAAA,MACR,WAAW,EAAA,IAAA;AAAA,MACX,IAAI,EAAA,IAAA;AAAA,MACJ,QAAU,EAAA,QAAA;AAAA,KAAA;AAAA,oBAEVA,cAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACC,EAAG,EAAA,uBAAA;AAAA,QACH,WAAY,EAAA,MAAA;AAAA,QACZ,KAAO,EAAA,IAAA;AAAA,QACP,UAAU,CAAC,CAAA,KAAM,YAAa,CAAA,CAAA,CAAE,cAAc,KAAK,CAAA;AAAA,QACnD,QAAQ,EAAA,IAAA;AAAA,OAAA;AAAA,KACV;AAAA,GAEF,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,WAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAA,EAAA;AAAA,QACT,YAAa,CAAA,wBAAA;AAAA,QACb,YAAa,CAAA,qBAAA;AAAA,QACb,MAAO,CAAA,eAAA;AAAA,OACT;AAAA,MACA,KAAM,EAAA,UAAA;AAAA,MACN,UAAY,EAAA,EAAA;AAAA,MACZ,OAAS,EAAA,eAAA;AAAA,MACT,QAAQ,EAAA,IAAA;AAAA,MACR,OAAQ,EAAA,2BAAA;AAAA,MACR,WAAW,EAAA,IAAA;AAAA,MACX,IAAI,EAAA,IAAA;AAAA,MACJ,QAAU,EAAA,QAAA;AAAA,KAAA;AAAA,oBAEVA,cAAA,CAAA,aAAA;AAAA,MAAC,WAAA;AAAA,MAAA;AAAA,QACC,EAAG,EAAA,2BAAA;AAAA,QACH,YAAc,EAAA,kBAAA;AAAA,QACd,OAAA,EAAS,WAAW,MAAM;AAAA,SAAK,GAAA,eAAA;AAAA,QAC/B,WAAY,EAAA,UAAA;AAAA,QACZ,UAAU,CAAC,CAAA,KAAM,gBAAiB,CAAA,CAAA,CAAE,cAAc,KAAK,CAAA;AAAA,QACvD,QAAQ,EAAA,IAAA;AAAA,OAAA;AAAA,KACV;AAAA,GAEJ,CAAA,CAAA;AAEJ;;;;"}