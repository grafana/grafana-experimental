{"version":3,"file":"Auth.js","sources":["../../../../src/ConfigEditor/Auth/Auth.tsx"],"sourcesContent":["import React from 'react';\nimport { css } from '@emotion/css';\nimport { AuthMethod, DefaultAuthMethod, CustomMethod, CustomMethodId } from './types';\nimport { AuthMethodSettings } from './auth-method/AuthMethodSettings';\nimport { TLSSettings, Props as TLSSettingsProps } from './tls/TLSSettings';\nimport { Props as BasicAuthProps } from './auth-method/BasicAuth';\nimport { CustomHeaders, Props as CustomHeadersProps } from './custom-headers/CustomHeaders';\nimport { ConfigSection } from '../ConfigSection';\n\nexport type Props = {\n  selectedMethod: AuthMethod | CustomMethodId;\n  mostCommonMethod?: AuthMethod | CustomMethodId;\n  visibleMethods?: Array<AuthMethod | CustomMethodId>;\n  extendedDefaultOptions?: Partial<Record<AuthMethod, DefaultAuthMethod>>;\n  customMethods?: CustomMethod[];\n  onAuthMethodSelect: (authType: AuthMethod | CustomMethodId) => void;\n  basicAuth?: Omit<BasicAuthProps, 'readOnly'>;\n  TLS?: Omit<TLSSettingsProps, 'readOnly'>;\n  customHeaders?: Omit<CustomHeadersProps, 'readOnly'>;\n  readOnly?: boolean;\n};\n\nexport const Auth: React.FC<Props> = ({\n  selectedMethod,\n  mostCommonMethod,\n  visibleMethods,\n  extendedDefaultOptions,\n  customMethods,\n  onAuthMethodSelect,\n  basicAuth,\n  TLS,\n  customHeaders,\n  readOnly = false,\n}) => {\n  const styles = {\n    container: css({\n      maxWidth: 578,\n    }),\n  };\n\n  return (\n    <div className={styles.container}>\n      <ConfigSection title=\"Authentication\">\n        <AuthMethodSettings\n          selectedMethod={selectedMethod}\n          mostCommonMethod={mostCommonMethod}\n          customMethods={customMethods}\n          visibleMethods={visibleMethods}\n          extendedDefaultOptions={extendedDefaultOptions}\n          onAuthMethodSelect={onAuthMethodSelect}\n          basicAuth={basicAuth}\n          readOnly={readOnly}\n        />\n        {TLS && <TLSSettings {...TLS} readOnly={readOnly} />}\n        {customHeaders && <CustomHeaders {...customHeaders} readOnly={readOnly} />}\n      </ConfigSection>\n    </div>\n  );\n};\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,MAAM,OAAwB,CAAC;AAAA,EACpC,cAAA;AAAA,EACA,gBAAA;AAAA,EACA,cAAA;AAAA,EACA,sBAAA;AAAA,EACA,aAAA;AAAA,EACA,kBAAA;AAAA,EACA,SAAA;AAAA,EACA,GAAA;AAAA,EACA,aAAA;AAAA,EACA,QAAW,GAAA,KAAA;AACb,CAAM,KAAA;AACJ,EAAA,MAAM,MAAS,GAAA;AAAA,IACb,WAAW,GAAI,CAAA;AAAA,MACb,QAAU,EAAA,GAAA;AAAA,KACX,CAAA;AAAA,GACH,CAAA;AAEA,EACE,uBAAAA,cAAA,CAAA,aAAA,CAAC,SAAI,SAAW,EAAA,MAAA,CAAO,6BACpBA,cAAA,CAAA,aAAA,CAAA,aAAA,EAAA,EAAc,OAAM,gBACnB,EAAA,kBAAAA,cAAA,CAAA,aAAA;AAAA,IAAC,kBAAA;AAAA,IAAA;AAAA,MACC,cAAA;AAAA,MACA,gBAAA;AAAA,MACA,aAAA;AAAA,MACA,cAAA;AAAA,MACA,sBAAA;AAAA,MACA,kBAAA;AAAA,MACA,SAAA;AAAA,MACA,QAAA;AAAA,KAAA;AAAA,GAED,EAAA,GAAA,oBAAQA,cAAA,CAAA,aAAA,CAAA,WAAA,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EAAgB,MAAhB,EAAqB,QAAA,EAAA,CAAoB,CACjD,EAAA,aAAA,iDAAkB,aAAkB,EAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EAAA,aAAA,CAAA,EAAlB,EAAiC,QAAA,EAAA,CAAoB,CAC1E,CACF,CAAA,CAAA;AAEJ;;;;"}