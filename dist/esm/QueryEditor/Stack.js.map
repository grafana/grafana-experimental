{"version":3,"file":"Stack.js","sources":["../../../src/QueryEditor/Stack.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { CSSProperties, useCallback } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\ninterface StackProps {\n  direction?: CSSProperties['flexDirection'];\n  alignItems?: CSSProperties['alignItems'];\n  wrap?: boolean;\n  gap?: number;\n  flexGrow?: CSSProperties['flexGrow'];\n}\n\nexport const Stack = ({ children, ...props }: React.PropsWithChildren<StackProps>) => {\n  const styles = useStyles2(useCallback((theme) => getStyles(theme, props), [props]));\n\n  return <div className={styles.root}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2, props: StackProps) => ({\n  root: css({\n    display: 'flex',\n    flexDirection: props.direction ?? 'row',\n    flexWrap: props.wrap ?? true ? 'wrap' : undefined,\n    alignItems: props.alignItems,\n    gap: theme.spacing(props.gap ?? 2),\n    flexGrow: props.flexGrow,\n  }),\n});\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;AAca,MAAA,KAAA,GAAQ,CAAC,EAAgE,KAAA;AAAhE,EAAA,IAAA,EAAA,GAAA,EAAA,EAAE,EAdxB,QAAA,EAAA,GAcsB,EAAe,EAAA,KAAA,GAAA,SAAA,CAAf,IAAe,CAAb,UAAA,CAAA,CAAA,CAAA;AACtB,EAAA,MAAM,MAAS,GAAA,UAAA,CAAW,WAAY,CAAA,CAAC,KAAU,KAAA,SAAA,CAAU,KAAO,EAAA,KAAK,CAAG,EAAA,CAAC,KAAK,CAAC,CAAC,CAAA,CAAA;AAElF,EAAA,uBAAQA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAI,SAAW,EAAA,MAAA,CAAO,QAAO,QAAS,CAAA,CAAA;AAChD,EAAA;AAEA,MAAM,SAAA,GAAY,CAAC,KAAA,EAAsB,KAAmB,KAAA;AApB5D,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AAoBgE,EAAA,OAAA;AAAA,IAC9D,MAAM,GAAI,CAAA;AAAA,MACR,OAAS,EAAA,MAAA;AAAA,MACT,aAAA,EAAA,CAAe,EAAM,GAAA,KAAA,CAAA,SAAA,KAAN,IAAmB,GAAA,EAAA,GAAA,KAAA;AAAA,MAClC,QAAU,EAAA,CAAA,CAAA,EAAA,GAAA,KAAA,CAAM,IAAN,KAAA,IAAA,GAAA,EAAA,GAAc,QAAO,MAAS,GAAA,KAAA,CAAA;AAAA,MACxC,YAAY,KAAM,CAAA,UAAA;AAAA,MAClB,KAAK,KAAM,CAAA,OAAA,CAAA,CAAQ,EAAM,GAAA,KAAA,CAAA,GAAA,KAAN,YAAa,CAAC,CAAA;AAAA,MACjC,UAAU,KAAM,CAAA,QAAA;AAAA,KACjB,CAAA;AAAA,GACH,CAAA;AAAA,CAAA;;;;"}