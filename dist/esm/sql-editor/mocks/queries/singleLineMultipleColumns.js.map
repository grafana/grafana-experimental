{"version":3,"file":"singleLineMultipleColumns.js","sources":["../../../../../src/sql-editor/mocks/queries/singleLineMultipleColumns.ts"],"sourcesContent":["import { TestQueryModel } from '../../test-utils/types';\n\nexport const singleLineMultipleColumns: TestQueryModel = {\n  query:\n    'SELECT count(column1), column2 FROM table1 WHERE column1 = \"value1\" GROUP BY column1 ORDER BY column1, avg(column2) DESC LIMIT 10;',\n  tokens: [\n    [\n      {\n        offset: 0,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 6,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 7,\n        type: 'predefined.sql',\n        language: 'sql',\n      },\n      {\n        offset: 12,\n        type: 'delimiter.parenthesis.sql',\n        language: 'sql',\n      },\n      {\n        offset: 13,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 20,\n        type: 'delimiter.parenthesis.sql',\n        language: 'sql',\n      },\n      {\n        offset: 21,\n        type: 'delimiter.sql',\n        language: 'sql',\n      },\n      {\n        offset: 22,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 23,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 30,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 31,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 35,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 36,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 42,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 43,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 48,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 49,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 56,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 57,\n        type: 'operator.sql',\n        language: 'sql',\n      },\n      {\n        offset: 58,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 59,\n        type: 'identifier.quote.sql',\n        language: 'sql',\n      },\n      {\n        offset: 60,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 66,\n        type: 'identifier.quote.sql',\n        language: 'sql',\n      },\n      {\n        offset: 67,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 68,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 73,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 74,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 76,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 77,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 84,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 85,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 90,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 91,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 93,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 94,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 101,\n        type: 'delimiter.sql',\n        language: 'sql',\n      },\n      {\n        offset: 102,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 103,\n        type: 'predefined.sql',\n        language: 'sql',\n      },\n      {\n        offset: 106,\n        type: 'delimiter.parenthesis.sql',\n        language: 'sql',\n      },\n      {\n        offset: 107,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 114,\n        type: 'delimiter.parenthesis.sql',\n        language: 'sql',\n      },\n      {\n        offset: 115,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 116,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 120,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 121,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 126,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 127,\n        type: 'number.sql',\n        language: 'sql',\n      },\n      {\n        offset: 129,\n        type: 'delimiter.sql',\n        language: 'sql',\n      },\n    ],\n  ],\n};\n"],"names":[],"mappings":"AAEO,MAAM,yBAA4C,GAAA;AAAA,EACvD,KACE,EAAA,oIAAA;AAAA,EACF,MAAQ,EAAA;AAAA,IACN;AAAA,MACE;AAAA,QACE,MAAQ,EAAA,CAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,CAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,CAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,2BAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,2BAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,eAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,cAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,sBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,sBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,EAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,eAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,2BAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,gBAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,2BAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,aAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,WAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,YAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,MACA;AAAA,QACE,MAAQ,EAAA,GAAA;AAAA,QACR,IAAM,EAAA,eAAA;AAAA,QACN,QAAU,EAAA,KAAA;AAAA,OACZ;AAAA,KACF;AAAA,GACF;AACF;;;;"}