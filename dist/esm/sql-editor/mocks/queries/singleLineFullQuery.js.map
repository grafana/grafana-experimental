{"version":3,"file":"singleLineFullQuery.js","sources":["../../../../../src/sql-editor/mocks/queries/singleLineFullQuery.ts"],"sourcesContent":["import { monacoTypes } from '@grafana/ui';\nimport { TestQueryModel } from '../../test-utils/types';\n\nexport const singleLineFullQuery: TestQueryModel = {\n  query: `SELECT column1, FROM table1 WHERE column1 = \"value1\" GROUP BY column1 ORDER BY column1 DESC LIMIT 10`,\n  tokens: [\n    [\n      {\n        offset: 0,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 6,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 7,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 14,\n        type: 'delimiter.sql',\n        language: 'sql',\n      },\n      {\n        offset: 15,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 16,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 20,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 21,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 27,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 28,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 33,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 34,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 41,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 42,\n        type: 'operator.sql',\n        language: 'sql',\n      },\n      {\n        offset: 43,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 44,\n        type: 'identifier.quote.sql',\n        language: 'sql',\n      },\n      {\n        offset: 45,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 51,\n        type: 'identifier.quote.sql',\n        language: 'sql',\n      },\n      {\n        offset: 52,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 53,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 58,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 59,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 61,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 62,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 69,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 70,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 75,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 76,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 78,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 79,\n        type: 'identifier.sql',\n        language: 'sql',\n      },\n      {\n        offset: 86,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 87,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 91,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 92,\n        type: 'keyword.sql',\n        language: 'sql',\n      },\n      {\n        offset: 97,\n        type: 'white.sql',\n        language: 'sql',\n      },\n      {\n        offset: 98,\n        type: 'number.sql',\n        language: 'sql',\n      },\n      {\n        offset: 100,\n        type: 'delimiter.sql',\n        language: 'sql',\n      },\n    ],\n  ] as monacoTypes.Token[][],\n};\n"],"names":[],"mappings":"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"}