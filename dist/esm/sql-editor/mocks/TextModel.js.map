{"version":3,"file":"TextModel.js","sources":["../../../../src/sql-editor/mocks/TextModel.ts"],"sourcesContent":["import { monacoTypes } from '@grafana/ui';\n\n// Stub for monacoTypes.editor.ITextModel\nfunction TextModel(value: string) {\n  return {\n    getValue: function (eol?: monacoTypes.editor.EndOfLinePreference, preserveBOM?: boolean): string {\n      return value;\n    },\n    getValueInRange: function (range: monacoTypes.IRange, eol?: monacoTypes.editor.EndOfLinePreference): string {\n      const lines = value.split('\\n');\n      const line = lines[range.startLineNumber - 1];\n      return line.trim().slice(range.startColumn === 0 ? 0 : range.startColumn - 1, range.endColumn - 1);\n    },\n    getLineLength: function (lineNumber: number): number {\n      const lines = value.split('\\n');\n      return lines[lineNumber - 1].trim().length;\n    },\n  };\n}\n\nexport { TextModel };\n"],"names":[],"mappings":"AAGA,SAAS,UAAU,KAAe,EAAA;AAChC,EAAO,OAAA;AAAA,IACL,QAAA,EAAU,SAAU,GAAA,EAA8C,WAA+B,EAAA;AAC/F,MAAO,OAAA,KAAA,CAAA;AAAA,KACT;AAAA,IACA,eAAA,EAAiB,SAAU,KAAA,EAA2B,GAAsD,EAAA;AAC1G,MAAM,MAAA,KAAA,GAAQ,KAAM,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAC9B,MAAA,MAAM,IAAO,GAAA,KAAA,CAAM,KAAM,CAAA,eAAA,GAAkB,CAAC,CAAA,CAAA;AAC5C,MAAA,OAAO,IAAK,CAAA,IAAA,EAAO,CAAA,KAAA,CAAM,KAAM,CAAA,WAAA,KAAgB,CAAI,GAAA,CAAA,GAAI,KAAM,CAAA,WAAA,GAAc,CAAG,EAAA,KAAA,CAAM,YAAY,CAAC,CAAA,CAAA;AAAA,KACnG;AAAA,IACA,aAAA,EAAe,SAAU,UAA4B,EAAA;AACnD,MAAM,MAAA,KAAA,GAAQ,KAAM,CAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAC9B,MAAA,OAAO,KAAM,CAAA,UAAA,GAAa,CAAC,CAAA,CAAE,MAAO,CAAA,MAAA,CAAA;AAAA,KACtC;AAAA,GACF,CAAA;AACF;;;;"}