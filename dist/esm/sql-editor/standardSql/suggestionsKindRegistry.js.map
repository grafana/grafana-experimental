{"version":3,"file":"suggestionsKindRegistry.js","sources":["../../../../src/sql-editor/standardSql/suggestionsKindRegistry.ts"],"sourcesContent":["import { RegistryItem } from '@grafana/data';\nimport { StatementPosition, SuggestionKind } from '../types';\n\nexport interface SuggestionKindRegistryItem extends RegistryItem {\n  id: StatementPosition;\n  kind: SuggestionKind[];\n}\n\n// Registry of possible suggestions for the given statement position\nexport const initSuggestionsKindRegistry = (): SuggestionKindRegistryItem[] => {\n  return [\n    {\n      id: StatementPosition.SelectKeyword,\n      name: StatementPosition.SelectKeyword,\n      kind: [SuggestionKind.SelectKeyword],\n    },\n    {\n      id: StatementPosition.WithKeyword,\n      name: StatementPosition.WithKeyword,\n      kind: [SuggestionKind.WithKeyword],\n    },\n    {\n      id: StatementPosition.AfterSelectKeyword,\n      name: StatementPosition.AfterSelectKeyword,\n      kind: [\n        SuggestionKind.StarWildCard,\n        SuggestionKind.FunctionsWithArguments,\n        SuggestionKind.Columns,\n        SuggestionKind.SelectMacro,\n      ],\n    },\n    {\n      id: StatementPosition.AfterSelectFuncFirstArgument,\n      name: StatementPosition.AfterSelectFuncFirstArgument,\n      kind: [SuggestionKind.Columns],\n    },\n    {\n      id: StatementPosition.AfterGroupByFunctionArgument,\n      name: StatementPosition.AfterGroupByFunctionArgument,\n      kind: [SuggestionKind.Columns],\n    },\n    {\n      id: StatementPosition.AfterWhereFunctionArgument,\n      name: StatementPosition.AfterWhereFunctionArgument,\n      kind: [SuggestionKind.Columns],\n    },\n    {\n      id: StatementPosition.AfterSelectArguments,\n      name: StatementPosition.AfterSelectArguments,\n      kind: [SuggestionKind.Columns],\n    },\n    {\n      id: StatementPosition.AfterFromKeyword,\n      name: StatementPosition.AfterFromKeyword,\n      kind: [SuggestionKind.Schemas, SuggestionKind.Tables, SuggestionKind.TableMacro],\n    },\n    {\n      id: StatementPosition.AfterSchema,\n      name: StatementPosition.AfterSchema,\n      kind: [SuggestionKind.Tables, SuggestionKind.TableMacro],\n    },\n    {\n      id: StatementPosition.SelectAlias,\n      name: StatementPosition.SelectAlias,\n      kind: [SuggestionKind.Columns, SuggestionKind.FunctionsWithArguments],\n    },\n    {\n      id: StatementPosition.FromKeyword,\n      name: StatementPosition.FromKeyword,\n      kind: [SuggestionKind.FromKeyword],\n    },\n    {\n      id: StatementPosition.AfterFrom,\n      name: StatementPosition.AfterFrom,\n      kind: [\n        SuggestionKind.WhereKeyword,\n        SuggestionKind.GroupByKeywords,\n        SuggestionKind.OrderByKeywords,\n        SuggestionKind.LimitKeyword,\n      ],\n    },\n    {\n      id: StatementPosition.AfterTable,\n      name: StatementPosition.AfterTable,\n      kind: [\n        SuggestionKind.WhereKeyword,\n        SuggestionKind.GroupByKeywords,\n        SuggestionKind.OrderByKeywords,\n        SuggestionKind.LimitKeyword,\n      ],\n    },\n    {\n      id: StatementPosition.WhereKeyword,\n      name: StatementPosition.WhereKeyword,\n      kind: [SuggestionKind.Columns, SuggestionKind.FilterMacro, SuggestionKind.TemplateVariables],\n    },\n    {\n      id: StatementPosition.WhereComparisonOperator,\n      name: StatementPosition.WhereComparisonOperator,\n      kind: [SuggestionKind.ComparisonOperators],\n    },\n    {\n      id: StatementPosition.WhereValue,\n      name: StatementPosition.WhereValue,\n      kind: [SuggestionKind.FilterMacro, SuggestionKind.TemplateVariables],\n    },\n    {\n      id: StatementPosition.AfterWhereValue,\n      name: StatementPosition.AfterWhereValue,\n      kind: [\n        SuggestionKind.LogicalOperators,\n        SuggestionKind.GroupByKeywords,\n        SuggestionKind.OrderByKeywords,\n        SuggestionKind.LimitKeyword,\n        SuggestionKind.Columns,\n        SuggestionKind.TemplateVariables,\n      ],\n    },\n    {\n      id: StatementPosition.AfterGroupByKeywords,\n      name: StatementPosition.AfterGroupByKeywords,\n      kind: [SuggestionKind.GroupMacro, SuggestionKind.Columns],\n    },\n    {\n      id: StatementPosition.AfterGroupBy,\n      name: StatementPosition.AfterGroupBy,\n      kind: [SuggestionKind.OrderByKeywords, SuggestionKind.LimitKeyword],\n    },\n    {\n      id: StatementPosition.AfterOrderByKeywords,\n      name: StatementPosition.AfterOrderByKeywords,\n      kind: [SuggestionKind.Columns],\n    },\n    {\n      id: StatementPosition.AfterOrderByFunction,\n      name: StatementPosition.AfterOrderByFunction,\n      kind: [SuggestionKind.SortOrderDirectionKeyword, SuggestionKind.LimitKeyword],\n    },\n    {\n      id: StatementPosition.AfterOrderByDirection,\n      name: StatementPosition.AfterOrderByDirection,\n      kind: [SuggestionKind.LimitKeyword],\n    },\n    {\n      id: StatementPosition.AfterIsOperator,\n      name: StatementPosition.AfterOrderByDirection,\n      kind: [SuggestionKind.NotKeyword, SuggestionKind.NullValue, SuggestionKind.BoolValues],\n    },\n    {\n      id: StatementPosition.AfterIsNotOperator,\n      name: StatementPosition.AfterOrderByDirection,\n      kind: [SuggestionKind.NullValue, SuggestionKind.BoolValues],\n    },\n  ];\n};\n"],"names":[],"mappings":"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"}