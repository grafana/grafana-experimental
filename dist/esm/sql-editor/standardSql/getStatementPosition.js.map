{"version":3,"file":"getStatementPosition.js","sources":["../../../../src/sql-editor/standardSql/getStatementPosition.ts"],"sourcesContent":["import { StatementPosition, TokenType } from '../types';\nimport { LinkedToken } from '../utils/LinkedToken';\nimport { StatementPositionResolversRegistryItem } from './types';\nimport { Registry } from '@grafana/data';\n\n// Given current cursor position in the SQL editor, returns the statement position.\nexport function getStatementPosition(\n  currentToken: LinkedToken | null,\n  statementPositionResolversRegistry: Registry<StatementPositionResolversRegistryItem>\n): StatementPosition[] {\n  const previousNonWhiteSpace = currentToken?.getPreviousNonWhiteSpaceToken();\n  const previousKeyword = currentToken?.getPreviousKeyword();\n  const previousIsSlash = currentToken?.getPreviousNonWhiteSpaceToken()?.is(TokenType.Operator, '/');\n  const resolvers = statementPositionResolversRegistry.list();\n  const positions = [];\n\n  for (const resolver of resolvers) {\n    if (\n      resolver.resolve(currentToken, previousKeyword ?? null, previousNonWhiteSpace ?? null, Boolean(previousIsSlash))\n    ) {\n      positions.push(resolver.id);\n    }\n  }\n\n  if (positions.length === 0) {\n    return [StatementPosition.Unknown];\n  }\n  return positions;\n}\n"],"names":[],"mappings":";;AAMgB,SAAA,oBAAA,CACd,cACA,kCACqB,EAAA;AATvB,EAAA,IAAA,EAAA,CAAA;AAUE,EAAA,MAAM,wBAAwB,YAAc,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,6BAAA,EAAA,CAAA;AAC5C,EAAA,MAAM,kBAAkB,YAAc,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,kBAAA,EAAA,CAAA;AACtC,EAAA,MAAM,mBAAkB,EAAc,GAAA,YAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,6BAAA,EAAA,KAAd,IAA+C,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,CAAG,UAAU,QAAU,EAAA,GAAA,CAAA,CAAA;AAC9F,EAAM,MAAA,SAAA,GAAY,mCAAmC,IAAK,EAAA,CAAA;AAC1D,EAAA,MAAM,YAAY,EAAC,CAAA;AAEnB,EAAA,KAAA,MAAW,YAAY,SAAW,EAAA;AAChC,IACE,IAAA,QAAA,CAAS,OAAQ,CAAA,YAAA,EAAc,eAAmB,IAAA,IAAA,GAAA,eAAA,GAAA,IAAA,EAAM,wDAAyB,IAAM,EAAA,OAAA,CAAQ,eAAe,CAAC,CAC/G,EAAA;AACA,MAAU,SAAA,CAAA,IAAA,CAAK,SAAS,EAAE,CAAA,CAAA;AAAA,KAC5B;AAAA,GACF;AAEA,EAAI,IAAA,SAAA,CAAU,WAAW,CAAG,EAAA;AAC1B,IAAO,OAAA,CAAC,kBAAkB,OAAO,CAAA,CAAA;AAAA,GACnC;AACA,EAAO,OAAA,SAAA,CAAA;AACT;;;;"}